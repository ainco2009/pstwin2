* *********************************************************
* *
* * 20/10/2007             BASEBNLA.DBC             21:06:02
* *
* *********************************************************
* *
* * Description:
* * This program was automatically generated by GENDBC
* * Version 2.26.67
* *
* *********************************************************
LPARAMETERS _cDirBase, _cPrefijo
PRIVATE pcBase
PRIVATE pcDirBase, pcPrefijo
pcDirBase = _cDirBase
pcPrefijo = _cPrefijo
pcBase = pcDirBase+"BASE"+pcPrefijo+".DBC"

DisplayStatus([Creating database...])
*CLOSE DATA ALL
CREATE DATABASE (pcBase)
DisplayStatus([Creating table EMPLBNLA...])
MakeTable_EMPLBNLA()
DisplayStatus([Creating table CONTBNLA...])
MakeTable_CONTBNLA()
DisplayStatus([Creating table SERVBNLA...])
MakeTable_SERVBNLA()
DisplayStatus([Creating table INCLBNLA...])
MakeTable_INCLBNLA()
DisplayStatus([Creating table DESCBNLA...])
MakeTable_DESCBNLA()
DisplayStatus([Creating table REINTEGRO...])
MakeTable_REINTEGRO()
DisplayStatus([Creating table ESTADISTICA...])
MakeTable_ESTADISTICA()
DisplayStatus([Creating table CUADRE...])
MakeTable_CUADRE()
DisplayStatus([Creating table ABONOS...])
MakeTable_ABONOS()
DisplayStatus([Creating table TRANSPAGO...])
MakeTable_TRANSPAGO()
DisplayStatus([Creating table RECHAZOS...])
MakeTable_RECHAZOS()
DisplayStatus([Creating table HISTCONT...])
MakeTable_HISTCONT()
DisplayStatus([Creating table HISTRANS...])
MakeTable_HISTRANS()
DisplayStatus([Creating table ENVIOSTOT...])
MakeTable_ENVIOSTOT()
DisplayStatus([Creating table ENVIODET...])
MakeTable_ENVIODET()
DisplayStatus([Creating table FORMATO1...])
MakeTable_FORMATO1()
DisplayStatus([Creating table FORMATO2...])
MakeTable_FORMATO2()
DisplayStatus([Creating table FORENVIO...])
MakeTable_FORENVIO()
DisplayStatus([Creating view VEWENVIO...])
MakeView_VEWENVIO()
DisplayStatus([Creating persistent relations...])
MakeRelation_1()
MakeRelation_2()
MakeRelation_3()
MakeRelation_4()
MakeRelation_5()
MakeRelation_6()
MakeRelation_7()
MakeRelation_8()
MakeRelation_9()
MakeRelation_10()
MakeRelation_11()
MakeRelation_12()
MakeRelation_13()
MakeRelation_14()
DisplayStatus([Creating relational integrity rules...])
MakeRI()
DisplayStatus([Finished.])


********* Procedure Re-Creation *********
try
	USE (pcBase)
	g_SetSafety = SET('SAFETY')
	SET SAFETY OFF
	SET TALK off
	LOCATE FOR Objectname = 'StoredProceduresSource'
	IF FOUND()
       APPEND MEMO Code FROM ( "cod"+pcPrefijo+".txt") OVERWRITE
	  *  REPLACE Code WITH SUBSTR(Code, 70, 32408)
	ENDIF
	 USE
	 SET CONSOLE off
	 COMPILE database  (pcBase)
	 SET CONSOLE on
CATCH TO oErr
			 
	= MESSAGEBOX("Error: " + ALLTRIM(STR(oerr.ERRORNO))+" "+oerr.MESSAGE,48,"Error")	 
endtry
**************************************************************************************************************************

FUNCTION MakeTable_EMPLBNLA
***** Table setup for EMPLBNLA *****
CREATE TABLE 'EMPLBNLA.DBF' NAME 'EMPLBNLA' (CEDULA C(9) NOT NULL CHECK .NOT.EMPTY(cedula) ERROR "Cédula no puede estar vacia", ;
                       APELLIDOS C(30) NOT NULL CHECK .NOT.EMPTY(apellidos) ERROR "Apellido no puede estar vacio", ;
                       NOMBRES C(20) NOT NULL CHECK .NOT.EMPTY(nombres) ERROR "Nombre no puede estar vacio", ;
                       NRO_CUENTA C(30) NOT NULL, ;
                       NACIONALIDAD C(1) NOT NULL DEFAULT "V", ;
                       CODIGO_ORG C(4) NOT NULL, ;
                       UBI_SERVIC C(3) NOT NULL CHECK .NOT.EMPTY(ubi_servic) ERROR "Servicio no puede estar vacio", ;
                       TIPO_NOMINA C(1) NOT NULL DEFAULT "E", ;
                       DIRECCION C(60) NOT NULL, ;
                       TELEFONO C(30) NOT NULL, ;
                       AFILIADO L NOT NULL DEFAULT .F., ;
                       MODO C(1) NOT NULL, ;
                       MONTO_DESC N(13, 2) NOT NULL, ;
                       MONTO_VIEJ N(13, 2) NOT NULL, ;
                       FEC_ULT_PAGO D NOT NULL, ;
                       FEC_UTL_COMPRA D NOT NULL)

***** Create each index for EMPLBNLA *****
ALTER TABLE 'EMPLBNLA' ADD PRIMARY KEY CEDULA TAG EMPLBNLA COLLATE 'MACHINE'
INDEX ON UBI_SERVIC TAG EMPLSERV COLLATE 'MACHINE'
INDEX ON APELLIDOS TAG EMPLAPELL COLLATE 'MACHINE'
INDEX ON NRO_CUENTA TAG EMPLCTA COLLATE 'MACHINE'

***** Change properties for EMPLBNLA *****
CREATE TRIGGER ON 'EMPLBNLA' FOR DELETE AS __ri_delete_emplbnla()
CREATE TRIGGER ON 'EMPLBNLA' FOR UPDATE AS __ri_update_emplbnla()
ENDFUNC

FUNCTION MakeTable_CONTBNLA
***** Table setup for CONTBNLA *****
CREATE TABLE 'CONTBNLA.DBF' NAME 'CONTBNLA' (CEDULA C(9) NOT NULL, ;
                       COD_CASA C(4) NOT NULL, ;
                       NUM_CONTRA C(8) NOT NULL CHECK .NOT.EMPTY(num_contra) ERROR "nro. contrato no pued estar vacio", ;
                       RELAINCLUS C(8) NOT NULL, ;
                       FEC_CONTRA D NOT NULL, ;
                       MON_CONTRA N(13, 2) NOT NULL, ;
                       FEC_VIGENC D NOT NULL, ;
                       MODALIDAD N(1, 0) NOT NULL DEFAULT 2, ;
                       NUM_CUOTAS N(3, 0) NOT NULL, ;
                       MON_CUOTAS N(13, 2) NOT NULL, ;
                       CODIGO_ORG C(4) NOT NULL, ;
                       FEC_ENVIO D NOT NULL, ;
                       FEC_ULT_MD D NOT NULL, ;
                       FEC_ANULAC D NOT NULL, ;
                       CTS_PAGADA N(3, 0) NOT NULL, ;
                       SALDO N(13, 2) NOT NULL, ;
                       FEC_ULT_PG D NOT NULL, ;
                       CTS_MOROSA N(3, 0) NOT NULL, ;
                       FECHA_PROCESO D NOT NULL, ;
                       ID_CONTRA C(8) NOT NULL DEFAULT SUBSTR(SYS(2015),2))

***** Create each index for CONTBNLA *****
INDEX ON CEDULA TAG CONCBNLA COLLATE 'MACHINE'
INDEX ON RELAINCLUS TAG CONTRELA COLLATE 'MACHINE'
ALTER TABLE 'CONTBNLA' ADD PRIMARY KEY COD_CASA+NUM_CONTRA TAG CONTCASA COLLATE 'MACHINE'
INDEX ON CEDULA+COD_CASA+NUM_CONTRA TAG CONTCEDCAS CANDIDATE COLLATE 'MACHINE'

***** Change properties for CONTBNLA *****
CREATE TRIGGER ON 'CONTBNLA' FOR DELETE AS __ri_delete_contbnla()
CREATE TRIGGER ON 'CONTBNLA' FOR UPDATE AS __ri_update_contbnla()
ENDFUNC

FUNCTION MakeTable_SERVBNLA
***** Table setup for SERVBNLA *****
CREATE TABLE 'SERVBNLA.DBF' NAME 'SERVBNLA' (COD_SERVIC C(3) NOT NULL CHECK .NOT.EMPTY(cod_servic) ERROR "Código de Servicio no puede estar vacio", ;
                       NOMB_SERVIC C(30) NOT NULL CHECK .NOT.EMPTY(nomb_servic) ERROR "Nombre de Servicio no puede estar vacio", ;
                       CICLO_FACT N(2, 0) NOT NULL DEFAULT 1, ;
                       COD_ORG C(4) NOT NULL)

***** Create each index for SERVBNLA *****
ALTER TABLE 'SERVBNLA' ADD PRIMARY KEY COD_SERVIC TAG COD_SERVIC COLLATE 'MACHINE'

***** Change properties for SERVBNLA *****
CREATE TRIGGER ON 'SERVBNLA' FOR DELETE AS __ri_delete_servbnla()
CREATE TRIGGER ON 'SERVBNLA' FOR UPDATE AS __ri_update_servbnla()
ENDFUNC

FUNCTION MakeTable_INCLBNLA
***** Table setup for INCLBNLA *****
CREATE TABLE 'INCLBNLA.DBF' NAME 'INCLBNLA' (RELAINCLUS C(8) NOT NULL, ;
                       COD_CASA C(4) NOT NULL CHECK .NOT.EMPTY(cod_casa) ERROR "Código de la Casa no puede estar vacio", ;
                       FEC_VIGENC D NOT NULL CHECK .NOT.EMPTY(fec_vigenc) ERROR "Fecha de Vigencia no puede estar vacia", ;
                       CANT_CONTRA N(4, 0) NOT NULL CHECK cant_contra>0 ERROR "Cantidad de Contratos debe ser mayor a cero", ;
                       MONTO N(15, 2) NOT NULL CHECK monto>0 ERROR "Monto Relación debe ser mayor a cero", ;
                       FEC_RELACION D NOT NULL DEFAULT DATE(), ;
                       CODIGO_ORG C(4) NOT NULL)

***** Create each index for INCLBNLA *****
ALTER TABLE 'INCLBNLA' ADD PRIMARY KEY RELAINCLUS TAG INCLBNLA COLLATE 'MACHINE'
INDEX ON DTOS(FEC_VIGENC) TAG INCFECHA COLLATE 'MACHINE'

***** Change properties for INCLBNLA *****
CREATE TRIGGER ON 'INCLBNLA' FOR UPDATE AS __ri_update_inclbnla()
ENDFUNC

FUNCTION MakeTable_DESCBNLA
***** Table setup for DESCBNLA *****
CREATE TABLE 'DESCBNLA.DBF' NAME 'DESCBNLA' (CEDULA C(9) NOT NULL, ;
                       NOMBRES C(35) NOT NULL, ;
                       COD_CASA C(4) NOT NULL, ;
                       NUM_CONTRA C(8) NOT NULL, ;
                       FECHA_DESC D NOT NULL, ;
                       FECHA_PROCESO D NOT NULL, ;
                       MONTO_DESC N(13, 2) NOT NULL, ;
                       REINTEGRO L NOT NULL, ;
                       PROCESADO L NOT NULL, ;
                       CODIGO_ORG C(4) NOT NULL)

***** Create each index for DESCBNLA *****
INDEX ON CEDULA TAG DESCED COLLATE 'MACHINE'
INDEX ON NOMBRES TAG DESCNOMB COLLATE 'MACHINE'
INDEX ON COD_CASA+CEDULA+NUM_CONTRA TAG DESCCASA COLLATE 'MACHINE'
INDEX ON CEDULA+COD_CASA+NUM_CONTRA TAG DESCEDCASA COLLATE 'MACHINE'

***** Change properties for DESCBNLA *****
ENDFUNC

FUNCTION MakeTable_REINTEGRO
***** Table setup for REINTEGRO *****
CREATE TABLE 'REINTEGRO.DBF' NAME 'REINTEGRO' (CEDULA C(9) NOT NULL, ;
                        MONTO_DESC N(15, 2) NOT NULL, ;
                        FECHA_PROCESO D NOT NULL, ;
                        STATUS N(1, 0) NOT NULL DEFAULT 1, ;
                        ORIGEN C(1) NOCPTRANS NOT NULL, ;
                        FECHA_PAGO D NOT NULL, ;
                        TIPO_PAGO N(1, 0) NOT NULL, ;
                        NRO_DOC C(10) NOT NULL, ;
                        BANCO C(30) NOT NULL)

***** Create each index for REINTEGRO *****
INDEX ON CEDULA TAG REINTCED COLLATE 'MACHINE'
INDEX ON DTOS(FECHA_PROCESO) TAG REINTFECHA COLLATE 'MACHINE'
ALTER TABLE 'REINTEGRO' ADD PRIMARY KEY CEDULA+DTOS(FECHA_PROCESO)+ORIGEN TAG REINTEGRO COLLATE 'MACHINE'

***** Change properties for REINTEGRO *****
ENDFUNC

FUNCTION MakeTable_ESTADISTICA
***** Table setup for ESTADISTICA *****
CREATE TABLE 'ESTADISTICA.DBF' NAME 'ESTADISTICA' (COD_CASA C(4) NOT NULL, ;
                          RAZON C(40) NOT NULL, ;
                          FECHA_PROCESO D NOT NULL, ;
                          MONTO_BRUTO N(17, 2) NOT NULL, ;
                          ASIGNACIONES N(17, 2) NOT NULL, ;
                          DEDUCCIONES N(17, 2) NOT NULL, ;
                          REGISTROS N(6, 0) NOT NULL, ;
                          MONTO_REGS N(8, 2) NOT NULL, ;
                          PORCENTAJE N(5, 2) NOT NULL, ;
                          MONTO_VENTA N(17, 2) NOT NULL, ;
                          IVA N(5, 2) NOT NULL, ;
                          CODIGO_ORG C(4) NOT NULL, ;
                          NOMBRE_ORG C(30) NOT NULL,;
                          FORMA_PAGO N(1) DEFAULT 1,;
                          COD_BANCO C(4) NOT NULL,;
                          NUM_TRANSF C(8) NOT NULL)

***** Create each index for ESTADISTICA *****
INDEX ON FECHA_PROCESO TAG ESTADISTIC COLLATE 'MACHINE'
ALTER TABLE 'ESTADISTICA' ADD PRIMARY KEY COD_CASA+DTOS(FECHA_PROCESO) TAG CASAFECHA COLLATE 'MACHINE'
INDEX ON DTOS(FECHA_PROCESO)+COD_CASA TAG FECHACASA CANDIDATE COLLATE 'MACHINE'

***** Change properties for ESTADISTICA *****
ENDFUNC

FUNCTION MakeTable_CUADRE
***** Table setup for CUADRE *****
CREATE TABLE 'CUADRE.DBF' NAME 'CUADRE' (CODIGO_ORG C(4) NOT NULL, ;
                     NOMBRE_ORG C(30) NOT NULL, ;
                     FECHA_PROCESO D NOT NULL, ;
                     CTAPAGANT N(10, 2) NOT NULL, ;
                     MONTO_DESC N(17, 2) NOT NULL, ;
                     INEXISTENTE N(17, 2) NOT NULL, ;
                     SOBREGIRO N(17, 2) NOT NULL, ;
                     CTAPAGACT N(10, 2) NOT NULL)

***** Create each index for CUADRE *****
ALTER TABLE 'CUADRE' ADD PRIMARY KEY DTOS(FECHA_PROCESO) TAG CUADRE COLLATE 'MACHINE'

***** Change properties for CUADRE *****
ENDFUNC

FUNCTION MakeTable_ABONOS
***** Table setup for ABONOS *****
CREATE TABLE 'ABONOS.DBF' NAME 'ABONOS' (CEDULA C(9) NOT NULL, ;
                     MONTO_DESC N(13, 2) NOT NULL, ;
                     MONTO_VIEJ N(13, 2) NOT NULL, ;
                     FECHA_PROCESO D NOT NULL, ;
                     REINTEGRAR N(1, 0) NOT NULL DEFAULT 0, ;
                     CODIGO_ORG C(4) NOT NULL, ;
                     COD_OFIC C(3) NOT NULL, ;
                     IDUSUA C(3) NOT NULL, ;
                     FEC_ACTUAL D NOT NULL)

***** Create each index for ABONOS *****
INDEX ON CEDULA+DTOS(FECHA_PROCESO) TAG ABONOS COLLATE 'MACHINE'
INDEX ON CEDULA TAG ABONCED COLLATE 'MACHINE'

***** Change properties for ABONOS *****
ENDFUNC

FUNCTION MakeTable_TRANSPAGO
***** Table setup for TRANSPAGO *****
CREATE TABLE 'TRANSPAGO.DBF' NAME 'TRANSPAGO' (CEDULA C(9) NOT NULL, ;
                        NOMBRES C(35) NOT NULL, ;
                        COD_CASA C(4) NOT NULL, ;
                        NUM_CONTRA C(8) NOT NULL, ;
                        NUM_CUOTAS N(3, 0) NOT NULL, ;
                        MON_CUOTAS N(13, 2) NOT NULL, ;
                        FEC_VIGENC D NOT NULL, ;
                        MON_CONTRA N(13, 2) NOT NULL, ;
                        FECHA_DESC D NOT NULL, ;
                        FECHA_PROCESO D NOT NULL, ;
                        SALDO_ANT N(13, 2) NOT NULL, ;
                        CTS_PAGADA N(3, 0) NOT NULL, ;
                        ID_CONTRA C(8) NOT NULL)

***** Create each index for TRANSPAGO *****
INDEX ON CEDULA TAG TRANSCED COLLATE 'MACHINE'
INDEX ON DTOS(FECHA_PROCESO)+COD_CASA TAG TRANSFECHA COLLATE 'MACHINE'
INDEX ON COD_CASA+DTOS(FECHA_PROCESO) TAG TRANSCASA COLLATE 'MACHINE'
INDEX ON CEDULA+COD_CASA+NUM_CONTRA+DTOS(FECHA_PROCESO) TAG TRANSPAGO COLLATE 'MACHINE'
INDEX ON COD_CASA+NUM_CONTRA TAG TRACEDCONT COLLATE 'MACHINE'
INDEX ON CEDULA+COD_CASA+NUM_CONTRA TAG TRACEDCASA COLLATE 'MACHINE'

***** Change properties for TRANSPAGO *****
ENDFUNC

FUNCTION MakeTable_RECHAZOS
***** Table setup for RECHAZOS *****
CREATE TABLE 'RECHAZOS.DBF' NAME 'RECHAZOS' (CEDULA C(9) NOT NULL, ;
                       COD_CASA C(4) NOT NULL, ;
                       NUM_CONTRA C(8) NOT NULL, ;
                       MONTO_DESC N(13, 2) NOT NULL, ;
                       FECHA_PROCESO D NOT NULL, ;
                       COD_RECHAZO C(3) NOT NULL, ;
                       DESCRIPCION C(30) NOT NULL, ;
                       CODIGO_ORG C(4) NOT NULL)

***** Create each index for RECHAZOS *****
INDEX ON CEDULA TAG RECHAZOS COLLATE 'MACHINE'
ALTER TABLE 'RECHAZOS' ADD PRIMARY KEY CEDULA+COD_CASA+NUM_CONTRA+DTOS(FECHA_PROCESO) TAG RECHCONTRA COLLATE 'MACHINE'
INDEX ON DTOS(FECHA_PROCESO)+CEDULA TAG RECHAFECHA COLLATE 'MACHINE'
INDEX ON CEDULA+DTOS(FECHA_PROCESO) TAG RECHACED COLLATE 'MACHINE'
INDEX ON CEDULA+COD_CASA+NUM_CONTRA TAG RECHCASA COLLATE 'MACHINE'

***** Change properties for RECHAZOS *****
ENDFUNC

FUNCTION MakeTable_HISTCONT
***** Table setup for HISTCONT *****
CREATE TABLE 'HISTCONT.DBF' NAME 'HISTCONT' (CEDULA C(9) NOT NULL, ;
                       COD_CASA C(4) NOT NULL, ;
                       NUM_CONTRA C(8) NOT NULL, ;
                       RELAINCLUS C(8) NOT NULL, ;
                       FEC_CONTRA D NOT NULL, ;
                       MON_CONTRA N(13, 2) NOT NULL, ;
                       FEC_VIGENC D NOT NULL, ;
                       MODALIDAD N(1, 0) NOT NULL, ;
                       NUM_CUOTAS N(3, 0) NOT NULL, ;
                       MON_CUOTAS N(13, 2) NOT NULL, ;
                       CODIGO_ORG C(4) NOT NULL, ;
                       FEC_ENVIO D NOT NULL, ;
                       FEC_ULT_MD D NOT NULL, ;
                       FEC_ANULAC D NOT NULL, ;
                       CTS_PAGADA N(3, 0) NOT NULL, ;
                       SALDO N(13, 2) NOT NULL, ;
                       FEC_ULT_PG D NOT NULL, ;
                       CTS_MOROSA N(3, 0) NOT NULL, ;
                       FECHA_PROCESO D NOT NULL, ;
                       ID_CONTRA C(8) NOT NULL)

***** Create each index for HISTCONT *****
INDEX ON CEDULA TAG HISTCONCED COLLATE 'MACHINE'

***** Change properties for HISTCONT *****
ENDFUNC

FUNCTION MakeTable_HISTRANS
***** Table setup for HISTRANS *****
CREATE TABLE 'HISTRANS.DBF' NAME 'HISTRANS' (CEDULA C(9) NOT NULL, ;
                       NOMBRES C(35) NOT NULL, ;
                       COD_CASA C(4) NOT NULL, ;
                       NUM_CONTRA C(8) NOT NULL, ;
                       NUM_CUOTAS N(3, 0) NOT NULL, ;
                       MON_CUOTAS N(13, 2) NOT NULL, ;
                       FEC_VIGENC D NOT NULL, ;
                       MON_CONTRA N(13, 2) NOT NULL, ;
                       FECHA_DESC D NOT NULL, ;
                       FECHA_PROCESO D NOT NULL, ;
                       SALDO_ANT N(13, 2) NOT NULL, ;
                       CTS_PAGADA N(3, 0) NOT NULL, ;
                       ID_CONTRA C(8) NOT NULL)

***** Create each index for HISTRANS *****
INDEX ON CEDULA TAG HISTRANCED COLLATE 'MACHINE'

***** Change properties for HISTRANS *****
ENDFUNC

FUNCTION MakeTable_ENVIOSTOT
***** Table setup for ENVIOSTOT *****
CREATE TABLE 'ENVIOSTOT.DBF' NAME 'ENVIOSTOT' (NUM_ENVIO C(8) NOT NULL, ;
                        FECHA_ENVIO D NOT NULL, ;
                        FECHA_VALOR D NOT NULL, ;
                        FECHA_VIGENCIA D NOT NULL, ;
                        SERVICIOS C(100) NOT NULL, ;
                        DEPURACXP L NOT NULL, ;
                        ORDENES N(7, 0) NOT NULL, ;
                        MONTO N(15, 2) NOT NULL, ;
                        ID_USUA C(3) NOT NULL, ;
                        OFICINA C(3) NOT NULL, ;
                        CODIGO_ORG C(4) NOT NULL)

***** Create each index for ENVIOSTOT *****
ALTER TABLE 'ENVIOSTOT' ADD PRIMARY KEY NUM_ENVIO TAG ENVIOSTOT COLLATE 'MACHINE'
INDEX ON DTOS(FECHA_ENVIO) TAG ENVIOFECHA COLLATE 'MACHINE'

***** Change properties for ENVIOSTOT *****
CREATE TRIGGER ON 'ENVIOSTOT' FOR DELETE AS __ri_delete_enviostot()
CREATE TRIGGER ON 'ENVIOSTOT' FOR UPDATE AS __ri_update_enviostot()
ENDFUNC

FUNCTION MakeTable_ENVIODET
***** Table setup for ENVIODET *****
CREATE TABLE 'ENVIODET.DBF' NAME 'ENVIODET' (NUM_ENVIO C(8) NOT NULL, ;
                       CEDULA C(9) NOT NULL, ;
                       NOMBRES C(35) NOT NULL, ;
                       NRO_CUENTA C(30) NOT NULL, ;
                       COD_CASA C(4) NOT NULL, ;
                       NUM_CONTRA C(8) NOT NULL, ;
                       FECHA_DESC D NOT NULL, ;
                       FECHA_PROCESO D NOT NULL, ;
                       MONTO_DESC N(13, 2) NOT NULL, ;
                       PROCESADO L NOT NULL, ;
                       COD_DEVOL C(2) NOT NULL, ;
                       RECHAZO L NOT NULL, ;
                       CODIGO_ORG C(4) NOT NULL)

***** Create each index for ENVIODET *****
INDEX ON NUM_ENVIO TAG ENVIODET COLLATE 'MACHINE'
INDEX ON NUM_ENVIO+CEDULA TAG ENVIOCED COLLATE 'MACHINE'
INDEX ON NUM_CONTRA+CEDULA+COD_CASA TAG ENVCONTCED COLLATE 'MACHINE'
INDEX ON CEDULA+COD_CASA+NUM_CONTRA TAG ENVCEDCASA COLLATE 'MACHINE'

***** Change properties for ENVIODET *****
ENDFUNC

FUNCTION MakeTable_FORMATO1
***** Table setup for FORMATO1 *****
CREATE TABLE 'FORMATO1.DBF' NAME 'FORMATO1' (FORMATO C(8) NOT NULL, ;
                       ID_LINEA C(3) NOT NULL, ;
                       NOMB_LINEA C(15) NOT NULL, ;
                       TIPO_LINEA N(1, 0) NOT NULL)

***** Create each index for FORMATO1 *****
ALTER TABLE 'FORMATO1' ADD PRIMARY KEY FORMATO+ID_LINEA TAG FORMATO1 COLLATE 'MACHINE'

***** Change properties for FORMATO1 *****
CREATE TRIGGER ON 'FORMATO1' FOR DELETE AS __ri_delete_formato1()
CREATE TRIGGER ON 'FORMATO1' FOR UPDATE AS __ri_update_formato1()
ENDFUNC

FUNCTION MakeTable_FORMATO2
***** Table setup for FORMATO2 *****
CREATE TABLE 'FORMATO2.DBF' NAME 'FORMATO2' (FORMATO C(10) NOT NULL, ;
                       ID_LINEA C(3) NOT NULL, ;
                       ID_CAMPO C(3) NOT NULL, ;
                       NOMBRE C(15) NOT NULL, ;
                       TIPO C(1) NOT NULL, ;
                       LONG_INTERNA N(3, 0) NOT NULL, ;
                       VALOR C(80) NOT NULL, ;
                       TIPO_VALOR C(1) NOT NULL, ;
                       POSINIC N(2, 0) NOT NULL, ;
                       LONG_CAMPO N(2, 0) NOT NULL, ;
                       DESCRIPCION M NOT NULL, ;
                       ORIGEN C(1) NOT NULL)

***** Create each index for FORMATO2 *****
INDEX ON FORMATO+ID_LINEA+ID_CAMPO TAG FORMATO2 COLLATE 'MACHINE'

***** Change properties for FORMATO2 *****
ENDFUNC

FUNCTION MakeTable_FORENVIO
***** Table setup for FORENVIO *****
CREATE TABLE 'FORENVIO.DBF' NAME 'FORENVIO' (CODREP C(8) NOT NULL, ;
                       NOMREP C(80) NOT NULL, ;
                       DESCREP M NOT NULL, ;
                       FORMATO C(8) NOT NULL, ;
                       TIPO C(1) NOT NULL, ;
                       ARCHDESTINO C(8) NOT NULL, ;
                       PREPROREP M NOT NULL, ;
                       POSPROREP M NOT NULL)

***** Create each index for FORENVIO *****

***** Change properties for FORENVIO *****
ENDFUNC

FUNCTION MakeView_VEWENVIO
***************** View setup for VEWENVIO ***************

CREATE SQL VIEW "VEWENVIO" ; 
   AS SELECT Enviostot.num_envio, Enviostot.fecha_valor, Enviostot.fecha_vigencia, Enviostot.ordenes, Enviostot.monto FROM basebnla!enviostot WHERE  Enviostot.fecha_envio = DATE() ORDER BY Enviostot.num_envio

DBSetProp('VEWENVIO', 'View', 'UpdateType', 1)
DBSetProp('VEWENVIO', 'View', 'WhereType', 3)
DBSetProp('VEWENVIO', 'View', 'FetchMemo', .T.)
DBSetProp('VEWENVIO', 'View', 'SendUpdates', .F.)
DBSetProp('VEWENVIO', 'View', 'UseMemoSize', 255)
DBSetProp('VEWENVIO', 'View', 'FetchSize', 100)
DBSetProp('VEWENVIO', 'View', 'MaxRecords', -1)
DBSetProp('VEWENVIO', 'View', 'Tables', 'basebnla!enviostot')
DBSetProp('VEWENVIO', 'View', 'Prepared', .F.)
DBSetProp('VEWENVIO', 'View', 'CompareMemo', .T.)
DBSetProp('VEWENVIO', 'View', 'FetchAsNeeded', .F.)
DBSetProp('VEWENVIO', 'View', 'Comment', "")
DBSetProp('VEWENVIO', 'View', 'BatchUpdateCount', 1)
DBSetProp('VEWENVIO', 'View', 'ShareConnection', .F.)
DBSetProp('VEWENVIO', 'View', 'AllowSimultaneousFetch', .F.)

*!* Field Level Properties for VEWENVIO
* Props for the VEWENVIO.num_envio field.
DBSetProp('VEWENVIO.num_envio', 'Field', 'KeyField', .T.)
DBSetProp('VEWENVIO.num_envio', 'Field', 'Updatable', .F.)
DBSetProp('VEWENVIO.num_envio', 'Field', 'UpdateName', 'basebnla!enviostot.num_envio')
DBSetProp('VEWENVIO.num_envio', 'Field', 'DataType', "C(8)")
* Props for the VEWENVIO.fecha_valor field.
DBSetProp('VEWENVIO.fecha_valor', 'Field', 'KeyField', .F.)
DBSetProp('VEWENVIO.fecha_valor', 'Field', 'Updatable', .T.)
DBSetProp('VEWENVIO.fecha_valor', 'Field', 'UpdateName', 'basebnla!enviostot.fecha_valor')
DBSetProp('VEWENVIO.fecha_valor', 'Field', 'DataType', "D")
* Props for the VEWENVIO.fecha_vigencia field.
DBSetProp('VEWENVIO.fecha_vigencia', 'Field', 'KeyField', .F.)
DBSetProp('VEWENVIO.fecha_vigencia', 'Field', 'Updatable', .T.)
DBSetProp('VEWENVIO.fecha_vigencia', 'Field', 'UpdateName', 'basebnla!enviostot.fecha_vigencia')
DBSetProp('VEWENVIO.fecha_vigencia', 'Field', 'DataType', "D")
* Props for the VEWENVIO.ordenes field.
DBSetProp('VEWENVIO.ordenes', 'Field', 'KeyField', .F.)
DBSetProp('VEWENVIO.ordenes', 'Field', 'Updatable', .T.)
DBSetProp('VEWENVIO.ordenes', 'Field', 'UpdateName', 'basebnla!enviostot.ordenes')
DBSetProp('VEWENVIO.ordenes', 'Field', 'DataType', "N(7)")
* Props for the VEWENVIO.monto field.
DBSetProp('VEWENVIO.monto', 'Field', 'KeyField', .F.)
DBSetProp('VEWENVIO.monto', 'Field', 'Updatable', .T.)
DBSetProp('VEWENVIO.monto', 'Field', 'UpdateName', 'basebnla!enviostot.monto')
DBSetProp('VEWENVIO.monto', 'Field', 'DataType', "N(15,2)")
ENDFUNC
 
*************** Begin Relations Setup **************

FUNCTION MakeRelation_1
ALTER TABLE 'ABONOS' ADD FOREIGN KEY TAG ABONCED REFERENCES EMPLBNLA TAG EMPLBNLA
ENDFUNC


FUNCTION MakeRelation_2
ALTER TABLE 'CONTBNLA' ADD FOREIGN KEY TAG CONCBNLA REFERENCES EMPLBNLA TAG EMPLBNLA
ENDFUNC


FUNCTION MakeRelation_3
ALTER TABLE 'EMPLBNLA' ADD FOREIGN KEY TAG EMPLSERV REFERENCES SERVBNLA TAG COD_SERVIC
ENDFUNC


FUNCTION MakeRelation_4
ALTER TABLE 'RECHAZOS' ADD FOREIGN KEY TAG RECHCASA REFERENCES CONTBNLA TAG CONTCEDCAS
ENDFUNC


FUNCTION MakeRelation_5
ALTER TABLE 'ENVIODET' ADD FOREIGN KEY TAG ENVIODET REFERENCES ENVIOSTOT TAG ENVIOSTOT
ENDFUNC


FUNCTION MakeRelation_6
ALTER TABLE 'REINTEGRO' ADD FOREIGN KEY TAG REINTCED REFERENCES EMPLBNLA TAG EMPLBNLA
ENDFUNC


FUNCTION MakeRelation_7
ALTER TABLE 'FORMATO2' ADD FOREIGN KEY TAG FORMATO2 REFERENCES FORMATO1 TAG FORMATO1
ENDFUNC


FUNCTION MakeRelation_8
ALTER TABLE 'DESCBNLA' ADD FOREIGN KEY TAG DESCEDCASA REFERENCES CONTBNLA TAG CONTCEDCAS
ENDFUNC


FUNCTION MakeRelation_9
ALTER TABLE 'TRANSPAGO' ADD FOREIGN KEY TAG TRACEDCASA REFERENCES CONTBNLA TAG CONTCEDCAS
ENDFUNC


FUNCTION MakeRelation_10
ALTER TABLE 'ENVIODET' ADD FOREIGN KEY TAG ENVCEDCASA REFERENCES CONTBNLA TAG CONTCEDCAS
ENDFUNC


FUNCTION MakeRelation_11
ALTER TABLE 'HISTRANS' ADD FOREIGN KEY TAG HISTRANCED REFERENCES EMPLBNLA TAG EMPLBNLA
ENDFUNC


FUNCTION MakeRelation_12
ALTER TABLE 'HISTCONT' ADD FOREIGN KEY TAG HISTCONCED REFERENCES EMPLBNLA TAG EMPLBNLA
ENDFUNC


FUNCTION MakeRelation_13
ALTER TABLE 'RECHAZOS' ADD FOREIGN KEY TAG RECHAZOS REFERENCES EMPLBNLA TAG EMPLBNLA
ENDFUNC


FUNCTION MakeRelation_14
ALTER TABLE 'CONTBNLA' ADD FOREIGN KEY TAG CONTRELA REFERENCES INCLBNLA TAG INCLBNLA
ENDFUNC

FUNCTION MakeRI
***** Referential Integrity Setup *****
CLOSE DATABASE
USE 'BASEBNLA.DBC'
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'abonos'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'abonced'$Property AND 'emplbnla'$Property AND 'emplbnla'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CII   '
    ELSE
      * ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'contbnla'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'concbnla'$Property AND 'emplbnla'$Property AND 'emplbnla'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CRI   '
    ELSE
      * ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'emplbnla'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'emplserv'$Property AND 'servbnla'$Property AND 'cod_servic'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CRI   '
    ELSE
      * ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'rechazos'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'rechcasa'$Property AND 'contbnla'$Property AND 'contcedcas'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CII   '
    ELSE
     *  ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'enviodet'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'enviodet'$Property AND 'enviostot'$Property AND 'enviostot'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CCI   '
    ELSE
     *  ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'reintegro'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'reintced'$Property AND 'emplbnla'$Property AND 'emplbnla'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CII   '
    ELSE
     *  ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'formato2'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'formato2'$Property AND 'formato1'$Property AND 'formato1'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CCI   '
    ELSE
      * ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'descbnla'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'descedcasa'$Property AND 'contbnla'$Property AND 'contcedcas'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CII   '
    ELSE
       *? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'transpago'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'tracedcasa'$Property AND 'contbnla'$Property AND 'contcedcas'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CCI   '
    ELSE
      * ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'enviodet'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'envcedcasa'$Property AND 'contbnla'$Property AND 'contcedcas'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CII   '
    ELSE
      * ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'histrans'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'histranced'$Property AND 'emplbnla'$Property AND 'emplbnla'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CCI   '
    ELSE
      * ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'histcont'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'histconced'$Property AND 'emplbnla'$Property AND 'emplbnla'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CCI   '
    ELSE
     *  ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'rechazos'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'rechazos'$Property AND 'emplbnla'$Property AND 'emplbnla'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CCI   '
    ELSE
      * ? "Could not set RI Information."
    ENDIF
ENDIF
LOCATE FOR ObjectType = 'Table' AND ObjectName = 'contbnla'
IF FOUND()
    nObjectID = ObjectID
    LOCATE FOR ObjectType = 'Relation' AND 'contrela'$Property AND 'inclbnla'$Property AND 'inclbnla'$Property AND ParentID = nObjectID
    IF FOUND()
	      REPLACE RiInfo WITH 'CII   '
    ELSE
     *  ? "Could not set RI Information."
    ENDIF
ENDIF
USE
ENDFUNC


FUNCTION DisplayStatus(lcMessage)
WAIT WINDOW NOWAIT lcMessage
ENDFUNC
